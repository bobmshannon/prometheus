machine:
  environment:
    GODIST: "go1.10.2.linux-amd64.tar.gz"
    GOPATH: "$HOME/.go_workspace"
    PROJECT_PATH: "$GOPATH/src/github.com/prometheus/prometheus"
  services:
    - docker
  pre:
    - wget -qO- https://artifactory.palantir.build/artifactory/internal-dist-contributions/docker/docker-engine/docker-1.11.2.tgz | sudo tar xvz -C /
    - sudo cp /docker/* /usr/local/bin/.
    - sudo cp /docker/* /usr/bin/.
  post:
    - mkdir -p download
    - test -e download/$GODIST || wget -O download/$GODIST https://artifactory.palantir.build/artifactory/external-dist-golang/$GODIST
    # Create custom Go distribution with packages built for darwin-amd64 if it is not present.
    - |
      if [ ! -e download/$GODIST-custom.tgz ]; then
        sudo rm -rf /usr/local/go && \
        sudo tar -C /usr/local -xzf download/$GODIST && \
        sudo env GOOS=darwin GOARCH=amd64 /usr/local/go/bin/go install std && \
        tar -C /usr/local -czf download/$GODIST-custom.tgz go
      fi
    - sudo rm -rf /usr/local/go
    - sudo tar -C /usr/local -xzf download/$GODIST-custom.tgz

dependencies:
    override:
        - cd $PROJECT_PATH && ./godelw version
    cache_directories:
        - ~/download
        - ~/.godel

checkout:
  post:
    # Re-arrange forked project path to match upstream.
    - rm -rf "$(dirname $PROJECT_PATH)"
    - mkdir -p "$(dirname $PROJECT_PATH)"
    - mv "$HOME/$CIRCLE_PROJECT_REPONAME" "$PROJECT_PATH"
    - ln -s "$PROJECT_PATH" "$HOME/$CIRCLE_PROJECT_REPONAME"
    # Ensure all tags are fetched and up-to-date
    - cd "$PROJECT_PATH" && git tag -l | xargs git tag -d && git fetch -t

test:
  pre:
    - go version
    - docker version
  override:
    - cd "$PROJECT_PATH" && ./godelw test
    - cd "$PROJECT_PATH" && ./godelw dist
  post:
    - cp -r -v "$PROJECT_PATH"/out/dist/* "$CIRCLE_ARTIFACTS"/

deployment:
  release:
    tag: /^v[0-9]+(\.[0-9]+){2}(-.+|[^-.]*)$/
    owner: SRX
    commands:
    - |
      cd "$PROJECT_PATH" &&
      ./godelw publish artifactory \
          --url "https://artifactory.palantir.build" \
          --repository internal-dist-release \
          --username "$ARTIFACTORY_USERNAME" \
          --password "$ARTIFACTORY_PASSWORD"
  snapshot:
    branch:
    - /^(?!master).*$/
    owner: SRX
    commands:
    - |
      cd "$PROJECT_PATH" &&
      ./godelw publish artifactory \
          --url "https://artifactory.palantir.build" \
          --repository internal-dist-snapshot \
          --username "$ARTIFACTORY_USERNAME" \
          --password "$ARTIFACTORY_PASSWORD"
