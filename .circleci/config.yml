working_dir: &working_dir
  working_directory: /go/src/github.com/prometheus/prometheus

circleci-golang: &circleci-golang
  <<: *working_dir
  docker:
  - image: circleci/golang:1.10
  resource_class: large

go-version: &go-version
  run: go version

godel-version: &godel-version
  run: ./godelw version

define-tests-dir: &define-tests-dir
  run: echo 'export TESTS_DIR=/tmp/test-results' >> $BASH_ENV

mkdir-tests-dir: &mkdir-tests-dir
  run: mkdir -p "${TESTS_DIR}"

store-test-results: &store-test-results
  type: test-results-store
  path: /tmp/test-results

store-artifacts: &store-artifacts
  type: artifacts-store
  path: /tmp/test-results
  destination: test-results

publish_steps: &publish_steps
  - checkout
  - *go-version
  - *godel-version
  - restore_cache:
      keys:
        - &out-cache-key out-{{ .Environment.CIRCLE_WORKFLOW_ID }}-{{ .Environment.CIRCLE_SHA1 }}-v1
  - run: ./godelw publish artifactory --url https://artifactory.palantir.build --repository "$PUBLISH_REPO" --username "$ARTIFACTORY_USERNAME" --password "$ARTIFACTORY_PASSWORD"
  - run: ./godelw publish apollo
version: 2
jobs:
  test:
    <<: *circleci-golang
    steps:
      - checkout
      - run: make promu
      - run: make check_license style unused staticcheck build
      - run: rm -v prometheus
  dist:
    <<: *circleci-golang
    steps:
      - checkout
      - *go-version
      - *godel-version
      - run: ./godelw dist
      - save_cache:
          key: *out-cache-key
          paths:
            - out
  publish-release:
    <<: *circleci-golang
    environment:
      PUBLISH_REPO: internal-dist-release
    steps: *publish_steps
  publish-snapshot:
    <<: *circleci-golang
    environment:
      PUBLISH_REPO: internal-dist-snapshot
    steps: *publish_steps

### Workflows ###
requires_jobs: &requires_jobs
  - test
  - dist

all-tags-filter: &all-tags-filter
  filters: { tags: { only: /.*/ } }

workflows:
  version: 2
  dist-publish:
    jobs:
      - test:
          <<: *all-tags-filter
      - dist:
          <<: *all-tags-filter
      - publish-release:
          requires: *requires_jobs
          filters:
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9]+$/
            branches:
              ignore: /.*/
      - publish-snapshot:
          requires: *requires_jobs
          filters:
            tags:
              ignore: /.*/
            branches:
              only: develop

notify:
  webhooks:
    - url: https://parana.palantir.build/hook
